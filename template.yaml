Transform: AWS::Serverless-2016-10-31


Globals:
  Function:
    Runtime: python3.8
    MemorySize: !Ref EnvConfiglambdamemorysizeAsString
    Timeout: !Ref EnvConfiglambdatimeoutAsString
    CodeUri: src
    Tracing: Active
    Environment:
      Variables:
        SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/


Resources:

  DeploymentArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-deployment-artifacts

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: "*"
                Resource: "*"
                Effect: "Allow"

  DeploymentPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref DeploymentUserArnAsString
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: PipelineExecutionRolePermissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: "iam:PassRole"
                Resource: !Ref CloudFormationExecutionRole
                Effect: "Allow"
              - Action:
                - "cloudformation:CreateChangeSet"
                - "cloudformation:DescribeChangeSet"
                - "cloudformation:ExecuteChangeSet"
                - "cloudformation:DescribeStackEvents"
                - "cloudformation:DescribeStacks"
                - "cloudformation:GetTemplateSummary"
                - "cloudformation:DescribeStackResource"
                Resource: "*"
                Effect: "Allow"
              - Action:
                - "s3:GetObject*"
                - "s3:PutObject*"
                - "s3:GetBucket*"
                - "s3:List*"
                Resource:
                  - !Sub arn:aws:s3:::${DeploymentArtifactsBucket}/*
                  - !Sub arn:aws:s3:::${DeploymentArtifactsBucket}
                Effect: "Allow"

  AddDeployment:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-AddDeployment
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: AddDeployment
      Handler: deployment_history.add_deployment
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
        - DynamoDBCrudPolicy:
            TableName: !Ref Deployments
      Environment:
        Variables:
          TABLE_NAME: !Ref Deployments
          TABLE_ARN: !GetAtt Deployments.Arn
      Events:
        EventRule:
          Type: EventBridgeRule
          Properties:
            Pattern:
              detail-type:
                - deployment
            EventBusName: !Ref EnvConfigeventbridgethiscoveryeventbusAsString
          Metadata:
            StackeryName: DeploymentEvent

  Deployments:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: stack_env
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: stack_env
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-Deployments

  CodeMetrics:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: repo
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: repo
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-CodeMetrics

Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  DeploymentUserArnAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/deployment-user/arn
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfiglambdamemorysizeAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/memory-size
  EnvConfiglambdatimeoutAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/lambda/timeout
  EnvConfigeventbridgethiscoveryeventbusAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/eventbridge/thiscovery-event-bus


Metadata:
  EnvConfigParameters:
    EnvConfiglambdamemorysizeAsString: lambda.memory-size
    EnvConfiglambdatimeoutAsString: lambda.timeout
    EnvConfigeventbridgethiscoveryeventbusAsString: eventbridge.thiscovery-event-bus